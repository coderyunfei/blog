(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{345:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"函数式编程概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程概述"}},[s._v("#")]),s._v(" 函数式编程概述")]),s._v(" "),t("p",[s._v("函数式编程倡导使用数学中的函数思想指导编程语言中函数的编写，使用函数构建程序。其背后的哲学思想是"),t("strong",[s._v("程序的本质是计算")]),s._v("，而函数是计算的严密的精确化的表达。函数是编程关注"),t("strong",[s._v("做什么")]),s._v("，而"),t("em",[s._v("如何做")]),s._v("都抽象到函数中，通过函数屏蔽了如何做的复杂性。函数式编程让能程序更健壮、易测试、易扩展和复用、随意并发等优点。")]),s._v(" "),t("blockquote",[t("p",[s._v("一些书籍说函数式还能让代码"),t("strong",[s._v("更容易理解和合理")]),s._v("，此观点我目前还没看到。实际上，生活体验告诉我，大多数人的思维方式都是逻辑不严密的、分散的，使用数学里的函数思想来指导编程，是困难的，不容易写出好代码。估计这也是函数式编程或者声明式编程不那么流行，而面向对象、面向过程等命令式编程范式大行其道的原因。")])]),s._v(" "),t("blockquote",[t("p",[s._v("也可能是我还没理解到函数式编程的精华。")])]),s._v(" "),t("h2",{attrs:{id:"编程范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编程范式"}},[s._v("#")]),s._v(" 编程范式")]),s._v(" "),t("p",[s._v("编程范式，编程方式或者编程原则，代表着编程语言或者编程语言的设计者或者使用者对程序的基本看法。学习一门新语言式时，从编程范式去理解它的设计思想，对写好代码有很好的帮助，它更加高屋建瓴。")]),s._v(" "),t("p",[s._v("编程范式一般包括三个方面，以 OOP 为例：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("学科的"),t("strong",[s._v("逻辑体系")]),s._v("——"),t("strong",[s._v("规则")]),s._v("范式：如类/对象、继承、动态绑定、方法改写、对象替换等等机制。")])]),s._v(" "),t("li",[t("p",[s._v("心理"),t("strong",[s._v("认知")]),s._v("因素——心理范式：按照面向对象编程之父 Alan Kay 的观点，“计算就是模拟”。OO 范式极其重视隐喻（metaphor）的价值，通过拟人化，按照自然的方式模拟自然。")])]),s._v(" "),t("li",[t("p",[s._v("自然观/"),t("strong",[s._v("世界观")]),s._v("——观念范式：强调程序的组织技术，视程序为松散耦合的对象/类的集合，以继承机制将类组织成一个层次结构，把程序运行视为相互服务的对象们之间的对话。")])])]),s._v(" "),t("p",[s._v("简单的说，"),t("strong",[s._v("编程范式是程序员看待程序应该具有的观点。")])]),s._v(" "),t("p",[s._v("不同的编程范式代表不同的世界观，使用不同的编程范式编程，代码的组织方式、可读性、测试难度，也会不同。")]),s._v(" "),t("p",[s._v("有的语言只主要支持一种编程范式，比如"),t("code",[s._v("Haskell")]),s._v("只是支持函数式编程，C 只支持过程式编程，有的语言支持多种，比如 JavaScript、 C++ 支持过程式、面向对象、函数式等，是多范式语言。")]),s._v(" "),t("h3",{attrs:{id:"非结构化编程-non-structured-programming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非结构化编程-non-structured-programming"}},[s._v("#")]),s._v(" 非结构化编程 (Non-structured programming)")]),s._v(" "),t("p",[s._v("最早期的编程范式，利用 "),t("code",[s._v("goto")]),s._v(" 或者 "),t("code",[s._v("label")]),s._v(" 语句在代码块之间跳转，比如汇编、早期的 BASIC 等，经过计算机科学的不懈探索，发现 goto 语句有害，代码非常难以阅读和推理，这种编程范式基本不再使用。")]),s._v(" "),t("h3",{attrs:{id:"结构化编程-structured-programming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构化编程-structured-programming"}},[s._v("#")]),s._v(" 结构化编程 (structured programming)")]),s._v(" "),t("p",[s._v("计算机科学发现 goto 语句的有害后，证明了只需要"),t("code",[s._v("顺序语句")]),s._v("、"),t("code",[s._v("循环语句")]),s._v("、"),t("code",[s._v("条件语句")]),s._v(" 就能完成编程，结构化编程就此诞生。计算机科学们对编程语言是否废除"),t("code",[s._v("goto")]),s._v("有不少争论，有人认为 goto 能使得程序清晰，有人认为使得程序不清晰，现在的流行的编程语言来看，主张废除一派占据上风，广大变程序员已经适应了没有 goto 语句的代码。本人认为 goto 确实使得程序难以理解。")]),s._v(" "),t("p",[s._v("广泛使用的编程语言都是结构化编程语言。")]),s._v(" "),t("h3",{attrs:{id:"命令式编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令式编程"}},[s._v("#")]),s._v(" 命令式编程")]),s._v(" "),t("p",[s._v("使用语句改变程序"),t("strong",[s._v("状态")]),s._v("的编程范式。需要一步一步告诉计算机"),t("strong",[s._v("如何")]),s._v("执行代码。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 改变 age ，即改变程序状态")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一步一步告诉计算机如何执行代码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" array "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("支持这一范式的编程语言有：C、C++、Java、JavaScript、Python 等")]),s._v(" "),t("p",[s._v("结构化编程又可以细分为面向对象、面向过程、面向切面等编程范式。")]),s._v(" "),t("p",[s._v("可以说命令式编程是"),t("strong",[s._v("程序状态")]),s._v("或者"),t("code",[s._v("副作用")]),s._v("驱动的，根据状态执行代码。")]),s._v(" "),t("h4",{attrs:{id:"面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[s._v("#")]),s._v(" 面向对象")]),s._v(" "),t("p",[s._v("面向对象编程认为，任何一个事物都可抽象成一个对象，用数据（属性）表示对象的状态，用方法表示对数据的操作，对象是数据和行为的结合。")]),s._v(" "),t("p",[s._v("把具有相同或者相似的对象组合，抽象成类或者类别，比如自行车有 2 个轮子、轿车有 4 个轮子，但是他们都是交通交通工具，就可抽象一个交通工具的类统一管理这些车，需要某个类别的车，由类创建即可，当然，你也可以把自行车、汽车分成两个类，它们可继承交通工具类的一些属性。")]),s._v(" "),t("p",[s._v("类是对象的模板。")]),s._v(" "),t("p",[s._v("这是"),t("code",[s._v("基于类的面向对象")]),s._v("。支持面向对象的语言有 Java、C++、JavaScript 等。")]),s._v(" "),t("p",[s._v("有人认为不需要类来抽象对象，而是需要对象的"),t("strong",[s._v("原型")]),s._v("，这就是"),t("strong",[s._v("基于原型的面对对象")]),s._v("。JavaScript 支持这种编程范式。")]),s._v(" "),t("blockquote",[t("p",[s._v("基于原型和基于类有何不同呢？为何很多 JavaScript 代码式基于类的风格，而不是原型？")])]),s._v(" "),t("p",[s._v("面对对象的编程范式取得巨大成功，很多大规模软件都使用这种编程范式开发。")]),s._v(" "),t("h3",{attrs:{id:"面向过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向过程"}},[s._v("#")]),s._v(" 面向过程")]),s._v(" "),t("p",[s._v("数据和处理的数据的函数分开。比如 C 。")]),s._v(" "),t("h3",{attrs:{id:"面向切面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向切面"}},[s._v("#")]),s._v(" 面向切面")]),s._v(" "),t("p",[s._v("根据"),t("strong",[s._v("分离关注点")]),s._v("的原则，可把面向对象分为"),t("code",[s._v("面向切面")]),s._v("、"),t("code",[s._v("面向角色")]),s._v("、"),t("code",[s._v("面向学科")]),s._v("编程。")]),s._v(" "),t("blockquote",[t("p",[s._v("关于分离关注点，体会不是很深，还需要阅读相关资料。")])]),s._v(" "),t("h3",{attrs:{id:"声明式编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明式编程"}},[s._v("#")]),s._v(" 声明式编程")]),s._v(" "),t("p",[s._v("与命令式编程相反，声明编程主张告诉计算机"),t("code",[s._v("做什么")]),s._v("，而不是指定"),t("code",[s._v("如何做")]),s._v("。")]),s._v(" "),t("p",[s._v("比如"),t("code",[s._v("SQL")]),s._v("、"),t("code",[s._v("scheme")]),s._v("、"),t("code",[s._v("正则")]),s._v("等语言。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 命令式写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" array "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明式写法")]),s._v("\narray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("比如声明式，forEach 更加好理解，也不容易出错。")]),s._v(" "),t("p",[s._v("声明式编程的基础是形式逻辑，具有容易推理、容易测试等特点，缺点就是不容易写出好代码，可能和人的天生反逻辑有关，否则我们都是数学家了。")]),s._v(" "),t("p",[s._v("声明式编程可细分为"),t("code",[s._v("函数式编程")]),s._v("、"),t("code",[s._v("逻辑式编程")]),s._v("。")]),s._v(" "),t("h4",{attrs:{id:"函数式编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[s._v("#")]),s._v(" 函数式编程")]),s._v(" "),t("p",[s._v("是一种古老的编程范式，在冯诺依曼计算诞生之前，就已经存在了，因为数学家们研究计算已经很久了。它的理论基础是"),t("code",[s._v("拉姆达演算")]),s._v("。")]),s._v(" "),t("p",[s._v("命令式编程式副作用或者状态的改变驱动的，而函数式编程主张"),t("code",[s._v("无状态")]),s._v("，是函数演算驱动的，它认为程序的本质式计算，而数学函数正好可以完成这些计算。")]),s._v(" "),t("p",[s._v("具有的特点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("无状态: 函数不维护状态。面对对象里，对象具有状态")])]),s._v(" "),t("li",[t("p",[s._v("数据不可变：输入数据不可改变，改变了就要返回新的数据")])]),s._v(" "),t("li",[t("p",[s._v("函数一等值")])]),s._v(" "),t("li",[t("p",[s._v("带有闭包")])]),s._v(" "),t("li",[t("p",[s._v("尾递归")])]),s._v(" "),t("li",[t("p",[s._v("无控制流")])])]),s._v(" "),t("blockquote",[t("p",[s._v("一等值："),t("code",[s._v("一等")]),s._v("不是类似"),t("code",[s._v("一流")]),s._v("、"),t("code",[s._v("王牌")]),s._v("的文学表达，而是编程语言的专业术语，满足下列三个条件的函数，才能是一等值：")])]),s._v(" "),t("ol",[t("li",[t("p",[s._v("可作为参数")])]),s._v(" "),t("li",[t("p",[s._v("可最为返回值")])]),s._v(" "),t("li",[t("p",[s._v("可赋值给变量")])])]),s._v(" "),t("p",[s._v("仅满足第一条，叫作二等值；3 条都不满足，叫三等值。 数字、字符串、布尔值等常用的值在很多编程语言中都是一等值。")]),s._v(" "),t("p",[t("code",[s._v("纯函数式")]),s._v(", 即仅支持函数式编程的语言里，是没有变量的，故第三条可理解为"),t("code",[s._v("可赋值给常量")]),s._v("，比如 "),t("code",[s._v("Haskell")]),s._v("。")]),s._v(" "),t("blockquote",[t("p",[s._v("JS 中的函数是一等值。")])]),s._v(" "),t("p",[s._v("具有的优点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("代码容易理解")])]),s._v(" "),t("li",[t("p",[s._v("很容易修改")])]),s._v(" "),t("li",[t("p",[s._v("容易并行执行或者异步执行")])]),s._v(" "),t("li",[t("p",[s._v("容易推理，就很容易测试")])])]),s._v(" "),t("p",[s._v("劣势：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("门槛比较高，写好函数式代码很难；")])]),s._v(" "),t("li",[t("p",[s._v("数据复制频繁，消耗内存。")])])]),s._v(" "),t("h3",{attrs:{id:"泛型编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型编程"}},[s._v("#")]),s._v(" 泛型编程")]),s._v(" "),t("p",[s._v("泛型为程语言提供了更高层级的抽象，即参数化类型。换句话说，就是把一个原本特定于某个类型的算法或类当中的类型信息抽象出来。泛型编程提供了更高的抽象层次，这意味着更强的表达能力。")]),s._v(" "),t("p",[s._v("很多面向对象的语言都支持泛型。")]),s._v(" "),t("h3",{attrs:{id:"其他常用的编程范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他常用的编程范式"}},[s._v("#")]),s._v(" 其他常用的编程范式")]),s._v(" "),t("ul",[t("li",[s._v("事件驱动")])]),s._v(" "),t("p",[s._v("程序的流程由诸如用户操作（鼠标单击、按键）、传感器输出或从其他程序或线程传递的消息等事件决定。通过有一个主循环在监听事件的触发，然后执行回调函数。")]),s._v(" "),t("p",[s._v("很多高级语言都支持。")]),s._v(" "),t("ul",[t("li",[s._v("数据驱动")])]),s._v(" "),t("p",[s._v("程序语句描述要匹配的数据和所需的处理，而不是定义要采取的一系列步骤。数据驱动编程类似于事件驱动编程，两者都被构造为模式匹配和结果处理，并且通常由主循环实现，尽管它们通常应用于不同的领域。")]),s._v(" "),t("p",[s._v("数据驱动和其他编程范式结合，可得到数据驱动的设计。react、vue、angular 三大前端框架，都主张数据驱动视图，是一个编程范式的体现。")]),s._v(" "),t("ul",[t("li",[s._v("数据流编程 (data flow programming)")])]),s._v(" "),t("p",[s._v("程序的操作是数据流动。这种编程范式具有函数式编程的一些特征。")]),s._v(" "),t("p",[s._v("命令式编程由分支结构、循环结构、顺序结构就能完成了，但是数据是静止的，比如面对对象编程中，对象之间的数据封装在内部的，不会轻易被外部改变。")]),s._v(" "),t("p",[s._v("相比之下，数据流编程强调数据的移动，让数据的输入输出连接程序操作，有点像数据驱动。程序不共享状态，天然支持并行。")]),s._v(" "),t("p",[s._v("数据流编程可细分，"),t("code",[s._v("基于流编程")]),s._v("和"),t("code",[s._v("响应式编程")]),s._v("，响应式编程用的比较多。")]),s._v(" "),t("p",[s._v("响应式编程(reactive programming)：使用数据流和变化驱动程序操作。")]),s._v(" "),t("p",[s._v("还需要了解更多。")]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://rxjs.dev/",target:"_blank",rel:"noopener noreferrer"}},[s._v("RxJS"),t("OutboundLink")],1),s._v(" 是 JS 的响应式编程库，在 angular 框架中被使用，门槛比较高。")])]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://rxjs-cn.github.io/learn-rxjs-operators/",target:"_blank",rel:"noopener noreferrer"}},[s._v("学习 RxJS"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.jdon.com/functional.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("函数式编程(Functional programming)"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.bilibili.com/read/cv5916262",target:"_blank",rel:"noopener noreferrer"}},[s._v("编程范式"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/qiwsir/ITArticles/blob/master/IT/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B8%96%E7%95%8C%E8%A7%82.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("编程范式，程序员的编程世界观"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"数学中的函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数学中的函数"}},[s._v("#")]),s._v(" 数学中的函数")]),s._v(" "),t("p",[s._v("函数表达式：")]),s._v(" "),t("blockquote",[t("p",[s._v("F(X)=Y")])]),s._v(" "),t("p",[s._v("一个输入 X (可以是一个数，可以是一个坐标，获取其他式子)，经过变换 F 或者映射 F，得到输出 Y。当 F 满足"),t("strong",[s._v("确定")]),s._v("一个 X，就"),t("strong",[s._v("唯一")]),s._v("有一个 Y 时，就叫变换 F 叫函数。")]),s._v(" "),t("blockquote",[t("p",[s._v("确定和唯一：")])]),s._v(" "),t("blockquote",[t("p",[s._v("函数 F "),t("strong",[s._v("只")]),s._v("依赖 X,只要确定 X，Y 就确定了。 F 仅依赖输入。")])]),s._v(" "),t("blockquote",[t("p",[s._v("一个 X 只能对应一个 Y, 而一个 Y 允许对应多个 X. 这点和确定 X，就"),t("strong",[s._v("唯一")]),s._v("确定 Y，不矛盾。同一个 X，多次按照 F 变换后，还是得到同一个结果。")])]),s._v(" "),t("p",[s._v("只要确定 X，就能唯一确定 Y，如果编程语言的函数也能按照这个性质编写，再把这些函数组成程序，那么程序就非常容易预测，测试起来就非常简单了。")]),s._v(" "),t("p",[s._v("函数式编程正是这种思想指导下的编程方式。这种编程思想在计算机诞生之前，就已经存在了。计算一直被数学家、逻辑学家和哲学家研究、使用，而计算机的发明，让计算更加高效、准确和快速。")]),s._v(" "),t("h2",{attrs:{id:"函数式中的函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数式中的函数"}},[s._v("#")]),s._v(" 函数式中的函数")]),s._v(" "),t("blockquote",[t("p",[s._v("纯函数就是数学上的函数，是函数式编程的全部。")])]),s._v(" "),t("p",[s._v("按照数学中的函数编写的函数："),t("strong",[s._v("仅依赖")]),s._v("输入或者参数就能完成自身逻辑的函数。函数的依赖仅有参数，这保证了相同的参数多次调用函数，返回值相同。这样函数叫纯函数，纯函数没有副作用。")]),s._v(" "),t("blockquote",[t("p",[s._v("函数 vs 方法")])]),s._v(" "),t("p",[s._v("JS 中，函数是可被调用的变量，和其他变量一样，函数可作为参数和返回值。")]),s._v(" "),t("p",[s._v("方法，必须和一个特定的对象绑定，通过该对象调用的函数。")]),s._v(" "),t("h3",{attrs:{id:"副作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#副作用"}},[s._v("#")]),s._v(" 副作用")]),s._v(" "),t("p",[s._v("纯函数内部不会"),t("code",[s._v("改变系统状态")]),s._v("，当函数能改变系统状态时，就说这个函数具有副作用。可理解成希望执行某个操作，也顺带执行其他操作，这个其他操作就是副作用。")]),s._v(" "),t("p",[t("code",[s._v("相同的参数，第一次调用和第二次的结果不同，往往是因为函数产生副作用。")])]),s._v(" "),t("p",[t("code",[s._v("slice")]),s._v(" 是纯的，"),t("code",[s._v("splice")]),s._v(" 是不纯的。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 纯的")]),s._v("\nxs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1,2,3]")]),s._v("\n\nxs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1,2,3]")]),s._v("\n\nxs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1,2,3]")]),s._v("\n\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("splice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1,2,3]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// numbers 被修改成 [4,5,6] 即产生了副作用")]),s._v("\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("splice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [4，5，6]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// numbers 被修改成 [] 即产生了副作用")]),s._v("\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("splice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// []")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// numbers 被修改成 [] 即产生了副作用")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[t("code",[s._v("函数式编程中，希望消除副作用。")])]),s._v(" "),t("p",[s._v("再来一个例子：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" minNum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不纯的，因为它依赖外部变量，相同的输入，会因为外部变量得到不同的输出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("checkAge1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("age")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" minNum\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 纯的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("checkAge2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("age")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" minimum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" minimum\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("blockquote",[t("p",[s._v("不纯的函数返回值取决于系统状态（system state）；这一点令人沮丧，因为它引入了外部的环境，从而增加了认知负荷（cognitive load)。")])]),s._v(" "),t("p",[s._v("这种依赖状态是影响系统复杂度的罪魁祸首。输入值之外的因素能够影响返回值，不仅让它变得不纯，而且导致每次我们思考整个软件的时候都痛苦不堪。")]),s._v(" "),t("p",[s._v("试想，当你看到 checkAge1 时，给它一个参数，你要知道外部变量才能预测它的结果，你可能又在项目里到处寻找这是外部依赖是什么，要是需要修改，你可能要考虑想改两个地方。")]),s._v(" "),t("p",[s._v("而 checkAge2 就不存在这个问题。")]),s._v(" "),t("p",[s._v("可以让 minimum 成为一个不可变（immutable）对象：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" immutableState "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("freeze")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("minimum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("我认为不可变对象还是不如纯函数，因为认知负荷还是没有减少。")])]),s._v(" "),t("p",[s._v("这让我想起，动车供电系统的设计：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1grtirheqlqj30dl09paaf.jpg",alt:""}})]),s._v(" "),t("p",[s._v("图中 v 字形的装置叫"),t("code",[s._v("受电弓")]),s._v("，随车移动，可折叠取回车内，其上方和电线接触的那个横条和高压电线接触。")]),s._v(" "),t("p",[s._v("电线和受电弓上横条长期高速摩擦，肯定会有损耗，极端的情况就是电线被摩断了，那么就可能导致列车减速甚至停止运行，但是我们从来没听说过这样的事故，这是为何？")]),s._v(" "),t("p",[s._v("不得不提及受电弓的巧妙设计 ---- 上方和电线接触的横条是"),t("code",[s._v("石墨")]),s._v("，导电好，但是硬度不及电线，因此石墨会先被磨损坏掉。")]),s._v(" "),t("p",[s._v("一辆列车上有很多受电弓，一个坏了，不会给列车造成很多的影响，这和软件里的"),t("code",[s._v("容灾设计")]),s._v("异曲同工。")]),s._v(" "),t("p",[s._v("受电弓坏了，列车到站修复，马上上路，要是电线那点断了，要到深山老林去检测那点坏了，理论上电线上每个点都可能坏，动辄几千公里的电线，高压还有列车行驶，无疑有很大的安全隐患。（实际上检查电线时不会一公里一公里地检查，但是了解极端情况就好。）")]),s._v(" "),t("p",[s._v("而让受电弓先磨损，就很方便停车时修理了，工程设计中这叫"),t("code",[s._v("集中伤害")]),s._v("，为了能"),t("code",[s._v("集中检测")]),s._v("、"),t("code",[s._v("集中修理")]),s._v("。")]),s._v(" "),t("p",[s._v("而软件设计中，扩展功能时，修改的地方越少越好，"),t("code",[s._v("低耦合")]),s._v("的体现，需要修改的代码越集中，越好，"),t("code",[s._v("高内聚")]),s._v("的体现，"),t("code",[s._v("高内聚低耦合")]),s._v(" 和 "),t("code",[s._v("集中伤害集中修理")]),s._v(" 有异曲同工之妙。")]),s._v(" "),t("blockquote",[t("p",[s._v("纯函数是依赖最小的方式，也是能集中伤害的方式。当需要扩展程序的功能时，我们只需要添加新的函数。当需要修复 bug 时，由于纯函数只依赖参数，我们只需修改函数，而不用考虑其他外部依赖。")])]),s._v(" "),t("blockquote",[t("p",[s._v("再理解副作用")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("副作用")]),s._v(" "),t("p",[s._v("参与计算的"),t("strong",[s._v("代码单元")]),s._v("（变量、函数调用、包块、语句等）对"),t("strong",[s._v("整个表单式")]),s._v("的影响，"),t("strong",[s._v("仅限")]),s._v("于代码单元的返回值，就认为该代码单元没有副作用（side effect），反之，就认为它有副作用。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" c\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("分析")]),s._v(" "),t("p",[t("code",[s._v("c++")]),s._v(", 参与计算 d ，然后自增 1，会影响后面 c 参与的计算;")]),s._v(" "),t("p",[t("code",[s._v("a+b")]),s._v(", 这个代码单元不会影响后续的计算，即把 "),t("code",[s._v("a+b")]),s._v(" 的结果使用一个数值代替，不会有任何差别。")])]),s._v(" "),t("p",[s._v("常见的副作用：")]),s._v(" "),t("ol",[t("li",[s._v("修改文件系统；")]),s._v(" "),t("li",[s._v("往数据库插入数据；")]),s._v(" "),t("li",[s._v("发生 http 请求；")]),s._v(" "),t("li",[t("code",[s._v("可变数据")]),s._v("；")]),s._v(" "),t("li",[s._v("获取用户输入；")]),s._v(" "),t("li",[s._v("DOM 查询；")]),s._v(" "),t("li",[s._v("修改系统状态；")]),s._v(" "),t("li",[t("strong",[s._v("赋值操作")]),s._v("。")])]),s._v(" "),t("p",[s._v("等等。")]),s._v(" "),t("blockquote",[t("p",[s._v("只要是跟"),t("code",[s._v("函数外部环境")]),s._v("发生的交互就都是副作用。")])]),s._v(" "),t("p",[s._v("无副作用，还可以编程吗？函数式编程的哲学就是假定副作用是造成不正当行为的主要原因。")]),s._v(" "),t("blockquote",[t("p",[s._v("不是禁止副作用，而是减少让副作用，让副作用可控，副作用难以预测，无法定位 bug。")])]),s._v(" "),t("p",[s._v("副作用让函数"),t("code",[s._v("不纯")]),s._v("，纯函数必须要能够根据相同的输入返回相同的输出；如果函数需要跟外部事物打交道，那么就无法保证这一点了。")]),s._v(" "),t("h3",{attrs:{id:"纯函数的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#纯函数的好处"}},[s._v("#")]),s._v(" 纯函数的好处")]),s._v(" "),t("p",[s._v("数学中的函数，相同的输入，不管计算多少遍，都得到相同结果。比如"),t("code",[s._v("sin(x)")]),s._v("，"),t("code",[s._v("sin(π/6)")]),s._v("，不管你求多少次，都是"),t("code",[s._v("0.5")]),s._v("。")]),s._v(" "),t("p",[s._v("相同的参数，函数执行执行多次，返回值都相同，这种特性叫"),t("code",[s._v("引用透明(referential transparency)")]),s._v("，引用透明的函数的依赖仅有参数。")]),s._v(" "),t("blockquote",[t("p",[s._v("关于引用透明\n是分析哲学的一个概念，该学科研究自然语言的语义和含义。\n如果一个句子中的实体（事物）被另一个"),t("strong",[s._v("相同")]),s._v("的实体代替，不改变原来的含义，这个句子就是引用透明的。")])]),s._v(" "),t("p",[s._v("一个例子：")]),s._v(" "),t("blockquote",[t("p",[s._v("[北京]比老鼠大 是真；")])]),s._v(" "),t("p",[s._v("[中国的首都]比老鼠大 是真;")]),s._v(" "),t("p",[s._v("[(116.46E,39.92N)的城市]比老鼠大 是真;")]),s._v(" "),t("p",[s._v("把"),t("code",[s._v("北京")]),s._v("替换成"),t("code",[s._v("中国的首都")]),s._v("、"),t("code",[s._v("北京的经纬度")]),s._v("，都不改变语义。这些命题的真正含义不会因为我们选择不同的引用或指称名称而受到影响。我们就可以认为场景"),t("code",[s._v("北京比老鼠大")]),s._v("是引用透明的。")]),s._v(" "),t("p",[s._v("与引用透明相反，蒯因认为存在引用不透明( REFERENTIALLY OPAQUE)，名称的改变对于整个语句意思非常重要。")]),s._v(" "),t("p",[s._v("比如："),t("code",[s._v("北京有2个字符")]),s._v("是真。那么：中国的首都有 2 个字符 是假。")]),s._v(" "),t("p",[s._v("这样场景 "),t("code",[s._v("xx有2个字符")]),s._v(" 的含义因为名称指称(name/reference)不同而不同。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("引用透明")]),s._v(" "),t("p",[s._v("个人认为，引用透明翻译得不好，"),t("code",[s._v("指代等价")]),s._v("或者"),t("code",[s._v("替换等价")]),s._v("更加容易理解，也更加契合数学的等价。")]),s._v(" "),t("p",[s._v("数学中的函数是引用透明的。")])]),s._v(" "),t("p",[t("code",[s._v("sin(π/6)")]),s._v("和"),t("code",[s._v("0.5")]),s._v("是等价的，sin(π/6) 参与计算的式子中，可直接使用 0.5 替换，这叫"),t("code",[s._v("替换模型（substitution model）")]),s._v("，如果一个函数是引用透明的，就可直接使用的返回值替换函数执行过程。这使得并发、缓存、预测等轻而易举。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("纯函数的另一种定义")]),s._v(" "),t("p",[s._v("满足两个条件：\n① 无副作用；\n② 返回值仅依赖于参数的，即相同输入，必须得到相同的输出。")])]),s._v(" "),t("p",[s._v("数学函数相同的输入必定得到相同的输出，这很自然，但是程序中的函数的输出可能依赖隐藏的状态，比如当前时间。")]),s._v(" "),t("blockquote",[t("p",[s._v("纯函数有诸多好处：")])]),s._v(" "),t("ol",[t("li",[s._v("可缓存")])]),s._v(" "),t("p",[s._v("既然纯函数对于相同的输入，都得到相同的返回，那么参数第一次执行的结果，都可缓存起来，下次在调遇到相同的参数，从缓存中获取结果。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("factorial")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("factorial")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("memorized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("fn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" factorialObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("factorialObj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" factorial"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("factorialObj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fastFactorial "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memorized")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("factorial"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cache'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fastFactorial")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeEnd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cache'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8.113ms")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'**************'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'no cache'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("factorial")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeEnd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'no cache'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0.061ms")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("blockquote",[t("p",[s._v("没缓存的函数更快速，不符合预期，这是为何？")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("可移植/自文档化 (Portable / Self-Documenting)")])]),s._v(" "),t("p",[s._v("纯函数是完全自给自足的，它仅依赖参数。移植方便。")]),s._v(" "),t("p",[s._v("因为函数式编程让开发者只关注"),t("code",[s._v("做什么")]),s._v("，没有如何做的细枝末节，具由很强的自文档化。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 命令式: 需要维护下标，修改麻烦，容易出错，移植困难，理解困难")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" len "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" len"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数式: 一个函数搞定，只需关注参数和 console.log() 修改容易，移植容易，理解容易")]),s._v("\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("再来一个例子：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不纯的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("signUp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("attrs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("saveUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attrs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("welcomeUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("saveUser")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("attrs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("save")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attrs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("welcomeUser")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Email")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 纯的")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("signUp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("saveUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("welcomeUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("saveUser")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("welcomeUser")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("Email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("命令式编程中“典型”的方法和过程都深深地根植于它们所在的"),t("strong",[s._v("环境")]),s._v("中，通过"),t("strong",[s._v("状态")]),s._v("、"),t("strong",[s._v("依赖")]),s._v("和有效作用（available effects）达成；")]),s._v(" "),t("blockquote",[t("p",[s._v("纯函数与此相反，它与环境无关，只要我们愿意，可以在任何地方运行它，保证了纯函数可移植。")])]),s._v(" "),t("p",[s._v("vue2 的 options API ，方法、状态都依赖组件的 this，使得组件之间共享逻辑非常困难，vue3 转到 composition API 这个问题就减轻很多，我们可以复用函数来实现共享逻辑。")]),s._v(" "),t("p",[s._v("Erlang 语言的作者 Joe Armstrong 说的这句话：“面向对象语言的问题是，它们永远都要随身携带那些隐式的环境。你只需要一个香蕉，但却得到一个拿着香蕉的大猩猩...以及整个丛林”。")]),s._v(" "),t("blockquote",[t("p",[s._v("自文档化，其实很大程度上取决于命名和编程语言的特性。")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("可测试性（Testable）")])]),s._v(" "),t("p",[s._v("只需简单地给函数一个输入，然后断言输出就好了。")]),s._v(" "),t("p",[s._v("QuickCheck ---- 纯函数测试工具，JS 版本不受欢迎。")]),s._v(" "),t("blockquote",[t("p",[s._v("函数式编程提倡编写小的函数，一个函数只做一件事，复杂的任务通过函数的组合来完成，函数越小越容易测试。")])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[s._v("合理性（Reasonable）")])]),s._v(" "),t("p",[s._v("纯函数的执行结果，可使用它的返回只替换，和符合人类的直觉。")]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[s._v("并行执行")])]),s._v(" "),t("blockquote",[t("p",[s._v("这一点是决定性的，可 "),t("code",[s._v("并行运行")]),s._v(" 任意纯函数。")])]),s._v(" "),t("p",[s._v("因为纯函数根本不需要访问共享的依赖，比如内存、全局变量等，而且根据其定义，纯函数也不会因副作用而进入竞争态（race condition）。")]),s._v(" "),t("p",[s._v("并行代码在服务端 js 环境以及使用了 web worker 的浏览器那里是非常容易实现的，因为它们使用了线程（thread）。不过出于对非纯函数复杂度的考虑，当前主流观点还是避免使用这种并行。")]),s._v(" "),t("h2",{attrs:{id:"如何编写纯函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何编写纯函数"}},[s._v("#")]),s._v(" 如何编写纯函数")]),s._v(" "),t("p",[s._v("前面对纯函数的定义，都是结果导向的，无法指导程序员编写出纯函数。也就是说，判断一个函数是否为纯函数，还需要可操作的方式。")]),s._v(" "),t("p",[s._v("满足这两个条件，一定为纯函数：")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("纯函数")]),s._v(" "),t("p",[s._v("① 不修改外部变量；\n② 不读取外部"),t("strong",[s._v("变量")]),s._v("，仅依赖参数。")])]),s._v(" "),t("p",[s._v("限制第一条，是为了不产生副作用。这个条件过于严格，其实，只要保证满足第二条约束，即使被修改的变量不被自己和其他代码读取，修改的变量为"),t("code",[s._v("只写")]),s._v("变量，即使函数修改了外部变量，副作用就不对程序产生影响。")]),s._v(" "),t("p",[s._v("限制第二条，是为了保护子不受到外部变量影响，仅依赖参数才能保证相同的输入得到相同的输出。")]),s._v(" "),t("p",[s._v("依据以上分析，JS 编写纯函数时，需要遵循的规则：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("不改变参数，"),t("strong",[s._v("参数为对象和数组时，是可变的")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("必须有返回值。")])])]),s._v(" "),t("p",[s._v("没返回值是副作用驱动的特征。")]),s._v(" "),t("blockquote",[t("p",[s._v("函数内部的副作用")])]),s._v(" "),t("p",[s._v("JS 不是专门的函数式编程语言，完全消除副作用是困难的，也是不必要的。换句话说，要限制副作用仅限于函数内部。")]),s._v(" "),t("p",[s._v("JS 的很多操作和内置函数都是具有副作用的。")]),s._v(" "),t("p",[s._v("不改变参数，复制参数，会有性能损耗，尤其是频繁调用的函数，所以以下情况，允许改变参数：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("根据参数返回一个稍微修改的对象或者数组。")])]),s._v(" "),t("li",[t("p",[s._v("递归调用。")])])]),s._v(" "),t("h2",{attrs:{id:"不变性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不变性"}},[s._v("#")]),s._v(" 不变性")]),s._v(" "),t("p",[s._v("函数式编程强调数据不变性（immutability）。数据不能改变，只能被替换，就具有不变形。js 中基本数据类型都是不变的，数组、对象和函数是可变的。")]),s._v(" "),t("blockquote",[t("p",[s._v("可借助一些开源库来实现数据不可变，比如"),t("a",{attrs:{href:"https://www.npmjs.com/package/immutable",target:"_blank",rel:"noopener noreferrer"}},[s._v("immutable"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("使用复制、冻结等实现数组的不变性，比较繁琐，计算机科学家想出了无需整体复制即可实现不可变的数据结构 ---- 共享结构体。")]),s._v(" "),t("h2",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),t("p",[s._v("导致代码难以理解的原因：")]),s._v(" "),t("p",[s._v("命名混乱的原因："),t("code",[s._v("同一概念使用不同的命名")]),s._v("。")]),s._v(" "),t("p",[s._v("通用代码的问题："),t("code",[s._v("在命名时容易把名字绑定到具体的数据上")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只针对当前的博客")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("validArticles")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("articles")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n  articles"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("article")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" article "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" article "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// better")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("compact")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("xs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" xs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// best")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" filterResult "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" array "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("includes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("blockquote",[t("p",[s._v("使用函数时必须小心"),t("code",[s._v("this")])])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 太可怕了")]),s._v("\nfs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'freaky_friday.txt'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("save"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 好一点点")]),s._v("\nfs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'freaky_friday.txt'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("save")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"参考-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.jdon.com/42422",target:"_blank",rel:"noopener noreferrer"}},[s._v("蒯因与引用透明"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("函数式编程"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"http://reactivex.io/learnrx/",target:"_blank",rel:"noopener noreferrer"}},[s._v("函数式编程的练习"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.guru99.com/functional-programming-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("What is Functional Programming? Tutorial with Example"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);