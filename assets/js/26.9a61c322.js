(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{306:function(s,a,t){"use strict";t.r(a);var e=t(10),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"node-学习笔记-全局对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-学习笔记-全局对象"}},[s._v("#")]),s._v(" node 学习笔记 --- 全局对象")]),s._v(" "),a("h2",{attrs:{id:"global-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global-对象"}},[s._v("#")]),s._v(" global 对象")]),s._v(" "),a("p",[s._v("node 用一个类似 window 的对象，是"),a("code",[s._v("全局变量")]),s._v("的宿主。\n全局变量：")]),s._v(" "),a("ul",[a("li",[s._v("global 的属性；")]),s._v(" "),a("li",[s._v("隐士定义的变量；")]),s._v(" "),a("li",[s._v("最外层定义的变量。\nnode 不可能在最外层定义变量，因为所有代码都在当前模块，而模块不是最外层上下文。")])]),s._v(" "),a("h2",{attrs:{id:"process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[s._v("#")]),s._v(" process")]),s._v(" "),a("p",[a("code",[s._v("process")]),s._v(" 是全局变量，global 的属性。描述当前 node 进程的状态，提供了一个与 操作系统的简单接口，命令行程序需要与之打交道。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("process.argv")]),s._v(" 是命令行参数，第一个是 node，第二个元素是脚本文件名，第三个元素开始是运行的参数。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// test.1.js")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("运行：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" test.1.js "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jackzhou'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("location")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Chengdu\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C:\\\\Program Files\\\\nodejs\\\\node.exe'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C:\\\\Users\\\\Administrator\\\\Desktop\\\\nodeJS学习\\\\node开发指南笔记\\\\test.\n1.js'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jackzhou'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age=23'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'location=Chengdu'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("process.stdout")]),s._v(" 是标准输出流，通常我们使用 "),a("code",[s._v("console.log()")]),s._v("向标准输出打印字符串，而 "),a("code",[s._v("process.stdout.write()")]),s._v(" 函数提供了更底层的接口。")]),s._v(" "),a("li",[a("code",[s._v("process.stdin")]),s._v("是标准输入流")]),s._v(" "),a("li",[a("code",[s._v("process.nextTick(callback)")]),s._v("的功能是为事件循环设置一项任务， node 会在下次事件循环响应时调用 callback。\n一个 node 进程只有一个线程，任何时刻，只有一个事件在执行。如果一个事件占用大量 CPU 时间，事件循环中的下一个事件，就需要等待很久，node 的一个编程原则是尽量缩短每个事件的执行时间。"),a("code",[s._v("process.nextTick()")]),s._v("可把复杂工作拆散成一个个较小的事件，从而缩短事件等待时间。")])]),s._v(" "),a("h2",{attrs:{id:"console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[s._v("#")]),s._v(" console")]),s._v(" "),a("p",[s._v("console 对象提供标准输出，用于标准输出流（stdout）或者标准错误流（stderr）。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("console.log()")]),s._v(",输出字符并"),a("code",[s._v("换行")]),s._v("。")]),s._v(" "),a("li",[s._v("error 。")]),s._v(" "),a("li",[s._v("trace：向标准输出流输出调用栈。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);