(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{294:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),s("p",[t._v("组件是自定义元素，组件是封装了行为（方法）和模板（HTML 代码，用于呈现数据）的类。")]),t._v(" "),s("h2",{attrs:{id:"组件定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件定义"}},[t._v("#")]),t._v(" 组件定义")]),t._v(" "),s("p",[t._v("使用 ts 的 Component 装饰器，可定义一个组件，组件内部可用"),s("strong",[t._v("元数据")]),t._v("进行注解，元数据定义组件如何工作、如何渲染。")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tselector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app-stock-item"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttemplateUrl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./component.HTML"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tstyleUrls"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./component.css"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockItemComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OnInit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("组件的命名：\n"),s("code",[t._v("xxxx.component.ts")]),t._v("，xxxx 是组件所在的目录，一般使用中划线（羊肉串）命名方式。")]),t._v(" "),s("h3",{attrs:{id:"元数据或者属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元数据或者属性"}},[t._v("#")]),t._v(" 元数据或者属性")]),t._v(" "),s("p",[t._v("装饰器中与很多属性，只有"),s("strong",[t._v("选择器")]),t._v("和"),s("strong",[t._v("模板")]),t._v("是必选的，其他都是可选的。当 ng 遇到选择器时，会渲染 "),s("code",[t._v("StockItemComponent")]),t._v(" 组件，即渲染模板代码。")]),t._v(" "),s("ol",[s("li",[t._v("selector")])]),t._v(" "),s("p",[t._v("选择器创建组件的实例，必填字段。\nselector (选择器)接收一个字符串，用于提供 ng 识别组件，是在 HTML 中使用组件的方式，和 CSS 选择器类似。")]),t._v(" "),s("ul",[s("li",[t._v("元素选择器")])]),t._v(" "),s("p",[t._v("selector:'tag-selector'，使用："),s("code",[t._v("<tag-selector></tag-selector>")])]),t._v(" "),s("blockquote",[s("p",[t._v("不能写成自闭合标签，比如 "),s("code",[t._v("<tag-selector/>")]),t._v("，ng 这么要求的原因是为了使自定义元素符合 HTML5 规范。")])]),t._v(" "),s("ul",[s("li",[t._v("类选择器")])]),t._v(" "),s("p",[t._v("selector:'.class-selector'，使用："),s("code",[t._v('<div class="class-selector"></div>')])]),t._v(" "),s("ul",[s("li",[t._v("属性选择器")])]),t._v(" "),s("p",[t._v("selector:'[prop-selector]'，使用： "),s("code",[t._v("<div prop-selector></div>")]),t._v("，在 HTML 中以属性的形式使用组件。")]),t._v(" "),s("blockquote",[s("p",[t._v("最推荐的选择器是元素选择器，这样很容易识别该选择器是一个组件。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("template")])]),t._v(" "),s("p",[t._v("模板是用于描述 UI 的代码，用来呈现数据。")]),t._v(" "),s("p",[t._v("templateUrl 属性接收一个相当于组件的路径，绝对路径会报错。")]),t._v(" "),s("p",[t._v("还可以使用内联模板，即在 template 属性接收一串 HTML 代码作为模板。")]),t._v(" "),s("p",[t._v("使用路径引入模板，可以获更加好的编辑器支持。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("组件样式")])]),t._v(" "),s("p",[t._v("和模板类似，组件的样式可使用 "),s("code",[t._v("styleUrls")]),t._v(" 属性从外部引入，或者使用 "),s("code",[t._v("styles")]),t._v(" 属性写内联样式，只能有一种，它们都是数组。")]),t._v(" "),s("p",[t._v("ng 提倡组件的样式是完全封闭和隔离的，也就说组件中使用的样式不会影响到其他组件，也可以通过设置"),s("code",[t._v("encapsulation")]),t._v("属性来改变样式的作用域。")]),t._v(" "),s("p",[t._v("encapsulation 有三个可选的值：\n"),s("code",[t._v("ViewEncapsulation.Emulated")]),t._v(" -- 默认值，组件内生效，会创建模板影子 DOM 和影子 root 行为的胶水代码。\n"),s("code",[t._v("ViewEncapsulation.Native")]),t._v(" -- 使用影子 root。适用于支持的浏览器和平台。\n"),s("code",[t._v("ViewEncapsulation.None")]),t._v(" -- 全局生效，没有任何封装。")]),t._v(" "),s("blockquote",[s("p",[t._v("有时候想要从外部修改组件的样式，如何做到？")])]),t._v(" "),s("blockquote",[s("p",[t._v("什么是影子 DOM?")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("删除空白符")])]),t._v(" "),s("p",[t._v("ng 允许从编译后的模板模板中删除的任何不必要的空白，包括多个空格、元素之间的空格，默认关闭的。\n设置 "),s("code",[t._v("preserveWhitespaces")]),t._v(" 为 true，开启。")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("改写插值符号")])]),t._v(" "),s("p",[t._v("默认情况下，使用"),s("code",[t._v("{{}}")]),t._v(" 作为插值标签，可在 "),s("code",[t._v("interpolation")]),t._v(" 属性中指定其他符号，以免和其他框架崇冲突。")]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("动画")])]),t._v(" "),s("p",[t._v("不太理解这里")]),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[t._v("视图提供者")])]),t._v(" "),s("ol",{attrs:{start:"8"}},[s("li",[t._v("导出组件")])]),t._v(" "),s("ol",{attrs:{start:"9"}},[s("li",[t._v("变更检测")])]),t._v(" "),s("p",[t._v("默认情况下，ng 会对 UI 中的每个绑定值检查，如果值一变化，就更新 UI。但是随着应用越来越大，默认的检查会有性能损失，而我们希望能决定更新的时机。")]),t._v(" "),s("p",[t._v("ng 提供了 "),s("code",[t._v("changeDetection")]),t._v(" 实现这一点，默认值是"),s("code",[t._v("DetectionStrategy.Default")]),t._v("。")]),t._v(" "),s("p",[t._v("把改属性的值改为 "),s("code",[t._v("ChangeDetectionStrategy.OnPush")]),t._v("，就可由"),s("strong",[t._v("开发者告诉 ng 更新时机")]),t._v("。")]),t._v(" "),s("ol",{attrs:{start:"10"}},[s("li",[t._v("指定插值符号 interpolation")])]),t._v(" "),s("p",[s("code",[t._v("interpolation: ['[', ']'],")])]),t._v(" "),s("p",[t._v("在模板中这样使用："),s("code",[t._v("[expression]")])]),t._v(" "),s("p",[t._v("该属性用于改写默认的插值符号。不能使用 {}，因为 "+t._s()+" 实 ng 默认了的插值符号")]),t._v(" "),s("h2",{attrs:{id:"组件的输入和输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件的输入和输出"}},[t._v("#")]),t._v(" 组件的输入和输出")]),t._v(" "),s("p",[t._v("组件可重用才是我们想要的，函数会根据不同的参数得到不同的返回，组件类似，可根据不同的输入，显示不同的 UI。")]),t._v(" "),s("p",[t._v("ng 以装饰器的形式给出了一些钩子，这些装饰器被称为输入和输出，这些装饰器应用与类的成员变量。")]),t._v(" "),s("p",[t._v("可在类的成员变量上使用 "),s("code",[t._v("Input")]),t._v(" 装饰器，在使用组件时，可以使用数据绑定语法，向组件传递数据，类似 vue 中的 prop。")]),t._v(" "),s("p",[t._v("组件想要向外部或者父组件传递数据，通过自定义事件的方式，类似 vue 的自定义事件。")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入 Input OutPut EventEmitter")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OnInit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EventEmitter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@angular/core"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tselector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app-input-output"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttemplate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n\t\t<div>\n\t\t\t<h1>你好</h1>\n\t\t\t<div>{{ title }}</div>\n\t\t\t<div>{{ person.name }}</div>\n\t\t\t<div>{{ person.age }}</div>\n\t\t\t<button (click)=\"onEventEmitter($event, '你好')\">触发自定义事件</button>\n\t\t</div>\n\t")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputOutputComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Input")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Input")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Output")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" eventName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" EventEmitter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ttitle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tperson"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明输出的类型：事件")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\ttitle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tperson"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化事件对象")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onEventEmitter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 emit 触发事件")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("person "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("p",[t._v("把成员变量 title 通过装饰器声明为组件输入：")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Input")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("成员变量的值在父组件通过数据绑定传入：")]),t._v(" "),s("div",{staticClass:"language-HTML line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("app-input-output")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[title]")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("app-input-output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("把另一个成员变量声明为输出，且类型是一个事件派发器：")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eventName 是一个事件派发器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Output")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" eventName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" EventEmitter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化事件对象")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onEventEmitter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 emit 触发事件，并传递一个参数")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("在组件上监听自定义事件")]),t._v(" "),s("div",{staticClass:"language-HTML line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("app-input-output")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("(eventName)")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handler($event)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("app-input-output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("父组件的事件处理器定义：")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'监听到自定义事件'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("blockquote",[s("p",[t._v("和原生的事件类似，事件处理函数传递一个 "),s("code",[t._v("$event")]),t._v(" 用于接收参数，如果不传递，将拿不到组件的输出。")])]),t._v(" "),s("blockquote",[s("p",[t._v("只能接收一个参数，如果想要传递多个参数，将它们包裹成对象或者数组。")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("this.eventName.emit({title: ++this.age + '', person: this.person})")])])]),t._v(" "),s("blockquote",[s("p",[t._v("必须将输出初始化为一个事件派发器")])]),t._v(" "),s("blockquote",[s("p",[t._v("输入的属性名称必须和组件中的变量名称完全相同")])]),t._v(" "),s("blockquote",[s("p",[t._v("通过输入传递引用类型的数据，在子组件中修改改输入，父组件中也会变化")])]),t._v(" "),s("blockquote",[s("p",[t._v("监听的自定义事件必须和组件中声明的输出完全相同")])]),t._v(" "),s("h2",{attrs:{id:"变化感知策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变化感知策略"}},[t._v("#")]),t._v(" 变化感知策略")]),t._v(" "),s("p",[t._v("每当 ng 监听到一个事件(定时器、用户交互、服务器请求)，都会去遍历组件树上的所有组件，检查每个绑定值是否变更，是否需要更新 UI ，然而绑定值很多，必然有些组件的某些绑定值是无需检查的，但是每个组件都去检查，会有性能损耗，ng 提供了开发人决定是否需要检查某个组件的属性。")]),t._v(" "),s("p",[s("code",[t._v("changeDetection")]),t._v(" 的默认值为 "),s("code",[t._v("ChangeDetectionStrategy.Default")]),t._v("，将其设置为"),s("code",[t._v("ChangeDetectionStrategy.OnPush")]),t._v(" ，组件的绑定将根据输入进行检查。")]),t._v(" "),s("p",[t._v("两种策略的区别，主要关注"),s("strong",[t._v("对象")]),t._v("的输入：")]),t._v(" "),s("blockquote",[s("p",[t._v("OnPush 父组件修改复杂输入的属性，子组件不会更新，而 Default 会更新。")])]),t._v(" "),s("blockquote",[s("p",[t._v("具体来说，修改输入对象的属性、修改输入数组的元素（修改元素属性、增加元素），更新策略为 OnPush 子组件不会更新，"),s("strong",[t._v("因为修改的是同一个引用")]),t._v("，而 Default 子组件会更新。")])]),t._v(" "),s("p",[t._v("更多信息：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.angular-university.io/how-does-angular-2-change-detection-really-work/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular Change Detection - How Does It Really Work?"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/angular-change-detection-strategy",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding Change Detection Strategy in Angular"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://dzone.com/articles/how-to-use-change-detection-in-angular",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to Use Change Detection in Angular"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),s("p",[t._v("组件和指令拥有自己的生命周期，在创建、渲染、更新和销毁的特定时期，执行特定的函数。当组件呈现之后，就会为每个子组件启动生命周期，直到整个应用渲染。")]),t._v(" "),s("p",[t._v("组件的生命周期，执行顺序是这样的：")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[s("p",[s("code",[t._v("constructor")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngOnChanges")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngOnInit")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngDoCheck")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngAfterContentInit")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngAfterContentChecked")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngAfterViewInit")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngAfterViewChecked")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ngDestroy")])])])]),t._v(" "),s("p",[s("code",[t._v("constructor")]),t._v(" 不属于生命周期，会第一个执行，用于初始化组件类。")]),t._v(" "),s("p",[s("code",[t._v("constructor")]),t._v("、"),s("code",[t._v("ngDestroy")]),t._v(" 和其他带有 "),s("code",[t._v("init")]),t._v("的函数，在整个生命周期中，只会执行一次。")]),t._v(" "),s("p",[t._v("每个生命周期都有一个接口，想要在某个生命周期中执行某个操作，就得实现该接口，生命周期函数去掉"),s("code",[t._v("ng")]),t._v("就是相应接口的名字。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("接口")]),t._v(" "),s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("Component or 指令")]),t._v(" "),s("th",[t._v("执行时机")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("OnChanges")]),t._v(" "),s("td",[t._v("ngOnChanges(changes:SimpleChanges)")]),t._v(" "),s("td",[t._v("组件、指令")]),t._v(" "),s("td",[t._v("指令被 set 后调用，每当输入属性的值变化时调用，首次调用一定在"),s("code",[t._v("ngOnInit")]),t._v(" 之前")])]),t._v(" "),s("tr",[s("td",[t._v("OnInit")]),t._v(" "),s("td",[t._v("ngOnInit()")]),t._v(" "),s("td",[t._v("组件、指令")]),t._v(" "),s("td",[t._v("初始化时执行，只会执行一次即第一轮 ngOnChanges 完成后调用，也就是每个输入属性都触发了一次 ngOnChanges 后调用。此处可调用服务器接口，从关注隔离和可测试的角度看，在该函数中请求接口，比构造函数更适合。")])]),t._v(" "),s("tr",[s("td",[t._v("DoCheck")]),t._v(" "),s("td",[t._v("ngDoCheck()")]),t._v(" "),s("td",[t._v("组件、指令")]),t._v(" "),s("td",[t._v("每个变更检测周期中调用。紧跟在每次执行变更检测时的 "),s("code",[t._v("ngOnChanges()")]),t._v(" 和 首次执行变更检测时的 "),s("code",[t._v("ngOnInit()")]),t._v(" 后调用。")])]),t._v(" "),s("tr",[s("td",[t._v("AfterContentInit")]),t._v(" "),s("td",[t._v("ngAfterContentInit()")]),t._v(" "),s("td",[t._v("组件")]),t._v(" "),s("td",[t._v("内容投影进组件后调用，在组件整个生命周期中，只会执行一次，没有投影，立即调用。")])]),t._v(" "),s("tr",[s("td",[t._v("AfterContentChecked")]),t._v(" "),s("td",[t._v("ngAfterContentChecked()")]),t._v(" "),s("td",[t._v("组件")]),t._v(" "),s("td",[t._v("投影内容变更检测后触发。初始化过程，在 AfterContentInit 之后调用")])]),t._v(" "),s("tr",[s("td",[t._v("AfterViewInit")]),t._v(" "),s("td",[t._v("ngAfterViewInit()")]),t._v(" "),s("td",[t._v("组件")]),t._v(" "),s("td",[s("strong",[t._v("初始化组件视图及其子视图后触发")]),t._v("，是 AfterContentInit 的补充")])]),t._v(" "),s("tr",[s("td",[t._v("AfterViewChecked")]),t._v(" "),s("td",[t._v("ngAfterViewChecked()")]),t._v(" "),s("td",[t._v("组件")]),t._v(" "),s("td",[t._v("组件视图及其子视图完成变更检测后调用。")])]),t._v(" "),s("tr",[s("td",[t._v("OnDestroy")]),t._v(" "),s("td",[t._v("ngOnDestroy()")]),t._v(" "),s("td",[t._v("组件、指令")]),t._v(" "),s("td",[t._v("组件或指令即将被销毁并从 UI 中移除时调用。可进行一些清理工作，比如清除定时器")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("为何 ngOnChanges 先于 ngOnInit 执行？")])]),t._v(" "),s("p",[t._v("因为 ng 把类的初始化当成属性的变更，属性一变更，ngChanges 就马上执行。")])])}),[],!1,null,null,null);s.default=e.exports}}]);